#!/bin/bash
set -eu

MIRROR="${MIRROR-"https://mirror.math.princeton.edu/pub/ubuntu-iso"}"

declare -a suites
suites=("desktop-amd64" "live-server-amd64" "server-amd64" "desktop-i386")

# TODO: remove "server-amd64" and "desktop-i386", which no longer exist

usage() {
    cat >&2 <<EOM
usage: $(basename "$0") [options] VERSION

Download Ubuntu ISOs from a release mirror.

Options:

    -h          Print this help message
    -m MIRROR   Use MIRROR as base URL rather than default.
    -a          Download amd64 releases only
    -d          Download desktop releases only
    -s          Download server releases only
    -w          Use wget as downloader
    -z          Use zsync as downloader (default)

Default mirror: $MIRROR


For example:

    # Download Ubuntu 14.04.4 LTS
    $ $(basename "$0") 14.04.4

EOM
}

run() {
    echo >&2 "+ $*"
    "$@"
}

cmd=zsync

while getopts adhm:swz OPT; do
    case $OPT in
        h)
            usage
            exit 0
            ;;
        m)
            MIRROR="$OPTARG"
            ;;
        a)
            suites=("desktop-amd64" "live-server-amd64" "server-amd64")
            ;;
        d)
            suites=("desktop-amd64" "desktop-i386")
            ;;
        s)
            suites=("live-server-amd64" "server-amd64")
            ;;
        w)
            cmd=wget
            ;;
        z)
            cmd=zsync
            ;;
        \?)
            usage
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

if [ $# -lt 1 ]; then
    usage
    exit 1
fi

version="$1"

if [[ $version =~ ^([0-9]+\.[0-9]+)(\.([0-9]+))?$ ]]; then
    major="${BASH_REMATCH[1]}"
else
    echo "Invalid version: $version"
    exit 2
fi

echo >&2 "Downloading Ubuntu $version"
echo >&2 "Mirror: $MIRROR"

declare -a files urls
files=(
    {SHA1,SHA256}SUMS{,.gpg}
)

for suite in "${suites[@]}"; do
    files+=("ubuntu-${version}-${suite}.iso")
done

urls=()

echo >&2 "Files to download:"
for file in "${files[@]}"; do
    echo >&2 "  $file"
    urls+=("$MIRROR/$major/$file")
done

case "$cmd" in
    wget)
        run wget -c "${urls[@]}"
        ;;
    zsync)
        for url in "${urls[@]}"; do
            if [[ $url == *.iso ]]; then
                run zsync "$url.zsync"
            else
                run wget -N "$url"
            fi
        done
        ;;
    *)
        echo >&2 "Unexpected cmd: $cmd"
        exit 3
        ;;
esac
