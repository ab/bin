#!/bin/bash
set -eu

if ! which tmux > /dev/null; then
    echo>&2 "$(basename "$0"): tmux: command not found"
    exit 3
fi

usage() {
    cat >&2 <<EOM
Usage: $(basename "$0") HOST_TYPES CLUSTER...

SSH to each HOST_TYPE in each CLUSTER in separate tmux panes.

example:

  $(basename "$0") util,m,tower w1 w2

EOM

}

tmux_cmd() {
        tmux send-keys -t $session "$*
"
}
tmux_ssh() {
    tmux_cmd "ssh '$1'"
}

if [ $# -lt 2 ]; then
    usage
    exit 1
fi

host_types="$(echo "$1" | tr ',' ' ')"
shift

for cluster in "$@"; do
    if ! [[ $cluster =~ ^[a-z]+[0-9]$ ]]; then
        usage
        echo "ERROR: $cluster doesn't seem to be a valid cluster name"
        exit 2
    fi
done

session=$(mktemp -u ssh-XXX)
tmux new-session -d -s $session

# should attach to session even if we fail somewhere
trap "tmux attach -t $session" EXIT

first_host_type=1
for type in $host_types; do

    echo "type: $type"

    # open a new window if this is not the first
    if [ -n "$first_host_type" ]; then
        first_host_type=
    else
        tmux new-window -t $session
        sleep 0.1
    fi

    first_cluster=1
    for cluster in "$@"; do

        echo "cluster: $cluster"

        # split the window if this is not the first
        if [ -n "$first_cluster" ]; then
            first_cluster=
        else
            tmux split-window -t $session -v
            tmux select-layout -t $session even-vertical
        fi

        tmux_ssh "$type.$cluster"
    done
done
