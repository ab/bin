#!/usr/bin/env python3
import subprocess
import sys
import traceback


def usage():
    sys.stderr.write('''usage: not COMMAND...

Invert exit status of COMMAND.

Table mapping process status to resulting status:

exit status nonzero => 0
exit status zero    => 1
exit on signal      => 2

other error         => 255

Examples:

    $ not true; echo $?
    1

    $ not false; echo $?
    0

''')


def main():
    if len(sys.argv) <= 1:
        usage()
        return 255

    command = sys.argv[1:]

    try:
        p = subprocess.Popen(command)
    except OSError as err:
        sys.stderr.write('not: %s: %s\n' % (command[0], err.strerror))
        return 255

    ret = p.wait()

    if ret == 0:
        # command succeeded
        return 1
    elif ret < 0:
        # command was signaled
        return 2
    elif ret > 0:
        # command exited with nonzero status
        return 0

    raise Exception('notreached')


if __name__ == '__main__':
    try:
        ret = main()
    except BaseException as e:
        sys.stderr.write(''.join(traceback.format_exception_only(type(e), e)))
        sys.exit(255)

    sys.exit(ret)
