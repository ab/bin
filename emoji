#!/usr/bin/env python3
# coding=utf-8

import os
import platform
import subprocess
import sys

ALIASES = {
    'fliptable': 'flip',
    'table': 'flip',
    'box': 'black_button',
    'check': 'check_button',
    'cross': 'cross_mark',
    'x': 'cross_mark',
}

ALL_EMOJI = {
    'unimpressed': 'ಠ_ಠ',
    'shrug': r'¯\_(ツ)_/¯',
    'flip': '(╯°□°)╯︵ ┻━┻',
    'tm': '™',

    'check_button': '✅',
    'cross_button': '❎',
    'black_button': '🔲',
    'check_mark': '✔️',
    'cross_mark': '❌',

    'cat': '(^._.^)ﾉ',
    'catface': '(^人^)',
    'sideeye': '(¬_¬)',

    'o_O': 'ミ●﹏☉ミ',
    'o_O2': '(⊙_◎)',
    'o_O3': '(⊙﹏⊙✿)',

    'dance1': '┌(・。・)┘♪',
    'dance2': '└(・。・)┐♪',
    'dance3': '♪┌(˘⌣˘)ʃ',

    'scared': '(´･_･`)',

    'flowerhappy': '(✿◠‿◠)',
    'hug': '⊂((・▽・))⊃',

    'facepalm': '(>_<)',
}


def has_clipboard_capability():
    host_os = platform.system()
    if host_os == 'Darwin':
        return True
    elif host_os == 'Linux':
        if os.path.exists('/usr/bin/xclip'):
            return True
        else:
            return False
    else:
        sys.stderr.write('warning: unknown OS %r\n' % host_os)
        return False


def clipboard_copy(text):
    host_os = platform.system()
    if host_os == 'Darwin':
        return clipboard_copy_mac(text)
    elif host_os == 'Linux':
        return clipboard_copy_linux(text)
    else:
        sys.stderr.write('warning: unknown OS %r\n' % host_os)
        return False


def clipboard_copy_mac(text):
    p = subprocess.Popen(['pbcopy'], stdin=subprocess.PIPE)
    return p.communicate(text.encode('utf-8'))


def clipboard_copy_linux(text):
    p = subprocess.Popen(['xclip', '-silent', '-selection', 'clipboard'],
                         stdin=subprocess.PIPE)
    return p.communicate(text.encode('utf-8'))


def emoji_for(word):
    word = ALIASES.get(word, word)
    return ALL_EMOJI[word]


def main(args):
    if len(args) >= 1:
        word = args[0]
        try:
            emoji = emoji_for(word)
        except KeyError:
            sys.stderr.write('Unknown emoji: %r\n' % word)
            return 1
        print(emoji)
        if USE_CLIPBOARD:
            clipboard_copy(emoji)
            sys.stderr.write('(copied to clipboard)\n')
    else:
        for name, emoji in ALL_EMOJI.items():
            print(name + ':', emoji)
    return 0


USE_CLIPBOARD = False
if 'CLIPBOARD' in os.environ:
    USE_CLIPBOARD = os.environ['CLIPBOARD']
else:
    if has_clipboard_capability():
        USE_CLIPBOARD = True


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
