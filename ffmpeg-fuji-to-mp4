#!/bin/bash

set -euo pipefail

run() {
    echo >&2 "+ $*"
    "$@"
}

if [ $# -lt 1 ] || [ $# -gt 2 ]; then
    cat >&2 <<EOM
usage: $(basename "$0") INPUT.MOV [OUTPUT.mp4]

Convert Fuji .mov quicktime video to .mp4 container, which makes native
playback possible on Android.

Under the hood, this will keep the video codec as-is (expected to be H264),
while encoding the audio as AAC (expected to be PCM originally).
It will also remove the timecode track, which can cause compatibility issues.

Convert a whole directory, one at a time (ffmpeg messes up tty if parallel):

    parallel -j 1 $(basename "$0") -- *.MOV

EOM
    exit 1
fi

input="$1"

if [ $# -ge 2 ]; then
    output="$2"
else
    output="$(dirname "$input")/${input%.???}.mp4"
fi

run ffmpeg -i "$input" -c:v copy -c:a aac -write_tmcd 0 -- "$output"

echo "Successfully wrote $output"
